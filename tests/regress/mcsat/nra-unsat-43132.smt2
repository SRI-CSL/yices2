(set-option :print-success false)
(set-option :produce-unsat-cores true)
(set-logic QF_NRA)
(declare-fun x8 () Real)
(declare-fun x28 () Real)
(declare-fun x3 () Real)
(declare-fun x23 () Real)
(declare-fun x22 () Real)
(declare-fun x13 () Real)
(declare-fun x5 () Real)
(declare-fun x29 () Real)
(declare-fun x17 () Real)
(declare-fun x9 () Real)
(declare-fun x16 () Real)
(declare-fun x21 () Real)
(declare-fun x26 () Real)
(declare-fun x12 () Real)
(declare-fun x6 () Real)
(declare-fun x14 () Real)
(declare-fun x10 () Real)
(declare-fun x7 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x27 () Real)
(declare-fun x24 () Real)
(declare-fun x2 () Real)
(declare-fun x15 () Real)
(declare-fun x25 () Real)
(declare-fun x11 () Real)
(declare-fun x19 () Real)
(declare-fun x20 () Real)
(declare-fun x4 () Real)
(assert (! (<= 0.0 x28) :named smtcomp1))
(assert (! (>= x12 0.0) :named smtcomp2))
(assert (! (<= 0.0 x23) :named smtcomp3))
(assert (! (>= x18 (+ 0.0 1.0)) :named smtcomp4))
(assert (! (>= x28 (+ (* (/ 1.0 2.0) x25) (* x16 (/ 1.0 2.0)) 0.0)) :named smtcomp5))
(assert (! (>= x11 0.0) :named smtcomp6))
(assert (! (>= x5 (+ (* (/ 1.0 2.0) x14) (* x18 (/ 1.0 2.0)) 0.0 1.0)) :named smtcomp7))
(assert (! (<= 0.0 x2) :named smtcomp8))
(assert (! (<= 0.0 x17) :named smtcomp9))
(assert (! (>= x3 0.0) :named smtcomp10))
(assert (! (<= (+ (* x2 1.0) 1.0 (* x13 x1 1.0) 0.0) x14) :named smtcomp11))
(assert (! (<= (+ 0.0 (* 1.0 x2) (* 1.0 x13 x8) 1.0) x6) :named smtcomp12))
(assert (! (<= (+ (* x9 (/ 1.0 2.0)) 1.0 (* x24 (/ 1.0 2.0)) 0.0) x4) :named smtcomp13))
(assert (! (<= (+ (* x11 (/ 1.0 2.0)) 0.0 (* x19 (/ 1.0 2.0))) x22) :named smtcomp14))
(assert (! (>= x1 (+ 1.0 0.0 (* (/ 1.0 2.0) x14) (* (/ 1.0 2.0) x18))) :named smtcomp15))
(assert (! (<= 0.0 x13) :named smtcomp16))
(assert (! (<= 0.0 x25) :named smtcomp17))
(assert (! (>= x23 (+ 0.0 1.0)) :named smtcomp18))
(assert (! (>= x20 (+ 0.0 1.0)) :named smtcomp19))
(assert (! (>= x19 (+ 0.0 1.0)) :named smtcomp20))
(assert (! (<= (+ 0.0 1.0) x25) :named smtcomp21))
(assert (! (>= x14 0.0) :named smtcomp22))
(assert (! (<= (+ 1.0 (* x23 (/ 1.0 2.0)) (* x6 (/ 1.0 2.0)) 0.0) x8) :named smtcomp23))
(assert (! (>= x29 0.0) :named smtcomp24))
(assert (! (<= (+ 0.0 1.0) x7) :named smtcomp25))
(assert (! (>= x9 0.0) :named smtcomp26))
(assert (! (>= x26 0.0) :named smtcomp27))
(assert (! (<= 0.0 x27) :named smtcomp28))
(assert (! (<= (+ (* 1.0 x13 x10) 0.0) x11) :named smtcomp29))
(assert (! (<= (+ 1.0 0.0) x9) :named smtcomp30))
(assert (! (<= (+ (* x28 x29 1.0) 0.0) x12) :named smtcomp31))
(assert (! (>= x10 0.0) :named smtcomp32))
(assert (! (>= x5 0.0) :named smtcomp33))
(assert (! (<= 0.0 x24) :named smtcomp34))
(assert (! (>= x27 (+ 1.0 0.0 (* (/ 1.0 2.0) x9) (* x24 (/ 1.0 2.0)))) :named smtcomp35))
(assert (! (>= x8 0.0) :named smtcomp36))
(assert (! (>= x15 0.0) :named smtcomp37))
(assert (! (>= x16 0.0) :named smtcomp38))
(assert (! (>= x21 0.0) :named smtcomp39))
(assert (! (>= x26 (+ (* (/ 1.0 2.0) x25) (* x16 (/ 1.0 2.0)) 0.0)) :named smtcomp40))
(assert (! (<= 0.0 x20) :named smtcomp41))
(assert (! (<= 0.0 x7) :named smtcomp42))
(assert (! (>= x3 (+ 0.0 (* x17 1.0 x13))) :named smtcomp43))
(assert (! (<= (+ 0.0 (* (/ 1.0 2.0) x19) (* (/ 1.0 2.0) x11)) x10) :named smtcomp44))
(assert (! (<= (+ 1.0 0.0) x29) :named smtcomp45))
(assert (! (<= (+ 1.0 (* 1.0 x4) (* x7 1.0 x28) 0.0) x15) :named smtcomp46))
(assert (! (<= (+ (* (/ 1.0 2.0) x3) (* (/ 1.0 2.0) x20) 0.0) x17) :named smtcomp47))
(assert (! (>= x24 (+ (* 1.0 x5) 1.0 (* x22 1.0 x27) 0.0)) :named smtcomp48))
(assert (! (<= 0.0 x18) :named smtcomp49))
(assert (! (<= 0.0 x1) :named smtcomp50))
(assert (! (<= (+ 1.0 0.0) x21) :named smtcomp51))
(assert (! (<= (+ 0.0 (* x22 x26 1.0)) x16) :named smtcomp52))
(assert (! (>= x13 (+ 0.0 (* (/ 1.0 2.0) x3) (* x20 (/ 1.0 2.0)))) :named smtcomp53))
(assert (! (>= x2 (+ 0.0 (* x6 (/ 1.0 2.0)) (* x23 (/ 1.0 2.0)) 1.0)) :named smtcomp54))
(assert (! (>= x22 0.0) :named smtcomp55))
(assert (! (<= 0.0 x19) :named smtcomp56))
(assert (! (<= 0.0 x6) :named smtcomp57))
(assert (! (<= 0.0 x4) :named smtcomp58))
(check-sat)
(get-unsat-core)
(exit)
