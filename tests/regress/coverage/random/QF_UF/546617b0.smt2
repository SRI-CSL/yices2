(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UF)
(declare-sort S0 0)
(declare-fun v0 () S0)
(declare-fun v1 () S0)
(declare-fun v2 () S0)
(declare-fun f0 ( S0 S0) S0)
(declare-fun f1 ( S0) S0)
(declare-fun f2 ( S0) S0)
(declare-fun f3 ( S0) S0)
(declare-fun f4 ( S0 S0) S0)
(declare-fun p0 ( S0 S0 S0) Bool)
(declare-fun p1 ( S0 S0) Bool)
(declare-fun p2 ( S0) Bool)
(declare-fun p3 ( S0) Bool)
(declare-fun p4 ( S0) Bool)
(assert (let ((e3 (f4 v1 v1)))
(let ((e4 (! (f1 e3) :named term4)))
(let ((e5 (! (f3 v0) :named term5)))
(let ((e6 (! (f0 e3 v2) :named term6)))
(let ((e7 (! (f4 e5 e4) :named term7)))
(let ((e8 (! (f0 e4 v1) :named term8)))
(let ((e9 (! (f1 e7) :named term9)))
(let ((e10 (! (f3 e8) :named term10)))
(let ((e11 (! (f2 v1) :named term11)))
(let ((e12 (! (p4 e9) :named term12)))
(let ((e13 (! (distinct v0 v0) :named term13)))
(let ((e14 (! (p1 e3 v2) :named term14)))
(let ((e15 (! (distinct e7 e4) :named term15)))
(let ((e16 (! (distinct e6 e11) :named term16)))
(let ((e17 (! (p4 v2) :named term17)))
(let ((e18 (! (p0 e7 e4 v2) :named term18)))
(let ((e19 (! (p1 e6 e9) :named term19)))
(let ((e20 (! (p1 e5 v2) :named term20)))
(let ((e21 (! (p0 e11 e5 v1) :named term21)))
(let ((e22 (! (p0 e3 e8 v0) :named term22)))
(let ((e23 (! (p0 e8 e6 e6) :named term23)))
(let ((e24 (! (distinct e10 v1) :named term24)))
(let ((e25 (! (p1 v0 e9) :named term25)))
(let ((e26 (! (p1 e4 e8) :named term26)))
(let ((e27 (! (p4 e6) :named term27)))
(let ((e28 (! (p3 e6) :named term28)))
(let ((e29 (! (p2 e9) :named term29)))
(let ((e30 (! (ite e20 e7 e9) :named term30)))
(let ((e31 (! (ite e24 e4 v0) :named term31)))
(let ((e32 (! (ite e16 e11 e10) :named term32)))
(let ((e33 (! (ite e21 v1 e5) :named term33)))
(let ((e34 (! (ite e15 v2 e3) :named term34)))
(let ((e35 (! (ite e26 e8 v1) :named term35)))
(let ((e36 (! (ite e13 e35 e32) :named term36)))
(let ((e37 (! (ite e29 e6 e6) :named term37)))
(let ((e38 (! (ite e16 e7 e5) :named term38)))
(let ((e39 (! (ite e18 e4 e30) :named term39)))
(let ((e40 (! (ite e22 e5 e33) :named term40)))
(let ((e41 (! (ite e27 e38 e7) :named term41)))
(let ((e42 (! (ite e27 e34 e33) :named term42)))
(let ((e43 (! (ite e13 e32 e41) :named term43)))
(let ((e44 (! (ite e14 e32 e37) :named term44)))
(let ((e45 (! (ite e19 e34 e30) :named term45)))
(let ((e46 (! (ite e17 e7 e43) :named term46)))
(let ((e47 (! (ite e29 e40 e33) :named term47)))
(let ((e48 (! (ite e25 v0 e31) :named term48)))
(let ((e49 (! (ite e28 v1 e38) :named term49)))
(let ((e50 (! (ite e12 e5 e45) :named term50)))
(let ((e51 (! (ite e12 e32 e30) :named term51)))
(let ((e52 (! (ite e18 e33 e51) :named term52)))
(let ((e53 (! (ite e23 v1 e36) :named term53)))
(let ((e54 (! (p1 e46 e31) :named term54)))
(let ((e55 (! (p0 e43 e41 e30) :named term55)))
(let ((e56 (! (p0 e48 e31 v2) :named term56)))
(let ((e57 (! (= e44 e5) :named term57)))
(let ((e58 (! (p4 e9) :named term58)))
(let ((e59 (! (p3 e37) :named term59)))
(let ((e60 (! (p2 e43) :named term60)))
(let ((e61 (! (p0 e37 e31 e41) :named term61)))
(let ((e62 (! (p3 e44) :named term62)))
(let ((e63 (! (= e53 e38) :named term63)))
(let ((e64 (! (p2 e53) :named term64)))
(let ((e65 (! (p4 e52) :named term65)))
(let ((e66 (! (distinct e42 e9) :named term66)))
(let ((e67 (! (p1 e42 e49) :named term67)))
(let ((e68 (! (p4 e39) :named term68)))
(let ((e69 (! (distinct e4 e30) :named term69)))
(let ((e70 (! (= e47 e3) :named term70)))
(let ((e71 (! (p4 e50) :named term71)))
(let ((e72 (! (= e11 e31) :named term72)))
(let ((e73 (! (p2 e37) :named term73)))
(let ((e74 (! (distinct e10 e48) :named term74)))
(let ((e75 (! (distinct e36 e33) :named term75)))
(let ((e76 (! (distinct e40 e52) :named term76)))
(let ((e77 (! (p0 e5 e47 e51) :named term77)))
(let ((e78 (! (distinct v0 e45) :named term78)))
(let ((e79 (! (p0 e49 e31 e10) :named term79)))
(let ((e80 (! (p4 e34) :named term80)))
(let ((e81 (! (distinct e6 e46) :named term81)))
(let ((e82 (! (p3 e7) :named term82)))
(let ((e83 (! (= e32 e10) :named term83)))
(let ((e84 (! (p2 e46) :named term84)))
(let ((e85 (! (p2 e9) :named term85)))
(let ((e86 (! (= e8 e46) :named term86)))
(let ((e87 (! (p4 v1) :named term87)))
(let ((e88 (! (distinct e35 e45) :named term88)))
(let ((e89 (! (ite e87 e67 e80) :named term89)))
(let ((e90 (! (=> e19 e19) :named term90)))
(let ((e91 (! (ite e15 e74 e84) :named term91)))
(let ((e92 (! (xor e27 e78) :named term92)))
(let ((e93 (! (xor e70 e54) :named term93)))
(let ((e94 (! (and e91 e88) :named term94)))
(let ((e95 (! (and e58 e82) :named term95)))
(let ((e96 (! (and e77 e61) :named term96)))
(let ((e97 (! (not e95) :named term97)))
(let ((e98 (! (= e13 e66) :named term98)))
(let ((e99 (! (ite e63 e63 e55) :named term99)))
(let ((e100 (! (and e64 e92) :named term100)))
(let ((e101 (! (= e25 e23) :named term101)))
(let ((e102 (! (or e28 e98) :named term102)))
(let ((e103 (! (not e12) :named term103)))
(let ((e104 (! (not e24) :named term104)))
(let ((e105 (! (xor e104 e26) :named term105)))
(let ((e106 (! (and e62 e99) :named term106)))
(let ((e107 (! (and e90 e96) :named term107)))
(let ((e108 (! (= e103 e20) :named term108)))
(let ((e109 (! (= e86 e71) :named term109)))
(let ((e110 (! (xor e17 e29) :named term110)))
(let ((e111 (! (not e102) :named term111)))
(let ((e112 (! (not e106) :named term112)))
(let ((e113 (! (ite e112 e21 e83) :named term113)))
(let ((e114 (! (=> e56 e89) :named term114)))
(let ((e115 (! (xor e68 e72) :named term115)))
(let ((e116 (! (= e75 e114) :named term116)))
(let ((e117 (! (and e59 e105) :named term117)))
(let ((e118 (! (=> e73 e93) :named term118)))
(let ((e119 (! (ite e107 e65 e109) :named term119)))
(let ((e120 (! (= e111 e94) :named term120)))
(let ((e121 (! (and e117 e76) :named term121)))
(let ((e122 (! (and e79 e119) :named term122)))
(let ((e123 (! (not e97) :named term123)))
(let ((e124 (! (and e122 e121) :named term124)))
(let ((e125 (! (ite e120 e100 e120) :named term125)))
(let ((e126 (! (or e123 e118) :named term126)))
(let ((e127 (! (or e116 e116) :named term127)))
(let ((e128 (! (=> e14 e124) :named term128)))
(let ((e129 (! (= e22 e22) :named term129)))
(let ((e130 (! (ite e128 e81 e125) :named term130)))
(let ((e131 (! (=> e130 e101) :named term131)))
(let ((e132 (! (=> e57 e129) :named term132)))
(let ((e133 (! (and e60 e69) :named term133)))
(let ((e134 (! (=> e115 e113) :named term134)))
(let ((e135 (! (= e127 e131) :named term135)))
(let ((e136 (! (not e126) :named term136)))
(let ((e137 (! (xor e108 e133) :named term137)))
(let ((e138 (! (ite e132 e18 e132) :named term138)))
(let ((e139 (! (or e138 e137) :named term139)))
(let ((e140 (! (and e139 e136) :named term140)))
(let ((e141 (! (or e140 e135) :named term141)))
(let ((e142 (! (and e134 e85) :named term142)))
(let ((e143 (! (or e141 e110) :named term143)))
(let ((e144 (! (ite e142 e143 e142) :named term144)))
(let ((e145 (! (and e144 e16) :named term145)))
e145
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "NUL")
(get-model)
(get-value (term4))
(get-value (term5))
(get-value (term6))
(get-value (term7))
(get-value (term8))
(get-value (term9))
(get-value (term10))
(get-value (term11))
(get-value (term12))
(get-value (term13))
(get-value (term14))
(get-value (term15))
(get-value (term16))
(get-value (term17))
(get-value (term18))
(get-value (term19))
(get-value (term20))
(get-value (term21))
(get-value (term22))
(get-value (term23))
(get-value (term24))
(get-value (term25))
(get-value (term26))
(get-value (term27))
(get-value (term28))
(get-value (term29))
(get-value (term30))
(get-value (term31))
(get-value (term32))
(get-value (term33))
(get-value (term34))
(get-value (term35))
(get-value (term36))
(get-value (term37))
(get-value (term38))
(get-value (term39))
(get-value (term40))
(get-value (term41))
(get-value (term42))
(get-value (term43))
(get-value (term44))
(get-value (term45))
(get-value (term46))
(get-value (term47))
(get-value (term48))
(get-value (term49))
(get-value (term50))
(get-value (term51))
(get-value (term52))
(get-value (term53))
(get-value (term54))
(get-value (term55))
(get-value (term56))
(get-value (term57))
(get-value (term58))
(get-value (term59))
(get-value (term60))
(get-value (term61))
(get-value (term62))
(get-value (term63))
(get-value (term64))
(get-value (term65))
(get-value (term66))
(get-value (term67))
(get-value (term68))
(get-value (term69))
(get-value (term70))
(get-value (term71))
(get-value (term72))
(get-value (term73))
(get-value (term74))
(get-value (term75))
(get-value (term76))
(get-value (term77))
(get-value (term78))
(get-value (term79))
(get-value (term80))
(get-value (term81))
(get-value (term82))
(get-value (term83))
(get-value (term84))
(get-value (term85))
(get-value (term86))
(get-value (term87))
(get-value (term88))
(get-value (term89))
(get-value (term90))
(get-value (term91))
(get-value (term92))
(get-value (term93))
(get-value (term94))
(get-value (term95))
(get-value (term96))
(get-value (term97))
(get-value (term98))
(get-value (term99))
(get-value (term100))
(get-value (term101))
(get-value (term102))
(get-value (term103))
(get-value (term104))
(get-value (term105))
(get-value (term106))
(get-value (term107))
(get-value (term108))
(get-value (term109))
(get-value (term110))
(get-value (term111))
(get-value (term112))
(get-value (term113))
(get-value (term114))
(get-value (term115))
(get-value (term116))
(get-value (term117))
(get-value (term118))
(get-value (term119))
(get-value (term120))
(get-value (term121))
(get-value (term122))
(get-value (term123))
(get-value (term124))
(get-value (term125))
(get-value (term126))
(get-value (term127))
(get-value (term128))
(get-value (term129))
(get-value (term130))
(get-value (term131))
(get-value (term132))
(get-value (term133))
(get-value (term134))
(get-value (term135))
(get-value (term136))
(get-value (term137))
(get-value (term138))
(get-value (term139))
(get-value (term140))
(get-value (term141))
(get-value (term142))
(get-value (term143))
(get-value (term144))
(get-value (term145))
(get-info :all-statistics)
