(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_LRA)
(declare-fun v0 () Real)
(assert (let ((e1 1))
(let ((e2 (! 1 :named term2)))
(let ((e3 (! 4 :named term3)))
(let ((e4 (! (+ v0 v0) :named term4)))
(let ((e5 (! (/ e3 e1) :named term5)))
(let ((e6 (! (/ e2 (- e3)) :named term6)))
(let ((e7 (! (< e6 v0) :named term7)))
(let ((e8 (! (<= e4 v0) :named term8)))
(let ((e9 (! (= e6 e4) :named term9)))
(let ((e10 (! (>= e5 v0) :named term10)))
(let ((e11 (! (ite e7 e6 v0) :named term11)))
(let ((e12 (! (ite e9 e5 e6) :named term12)))
(let ((e13 (! (ite e8 e4 e5) :named term13)))
(let ((e14 (! (ite e10 v0 e13) :named term14)))
(let ((e15 (! (= e12 e6) :named term15)))
(let ((e16 (! (> v0 e13) :named term16)))
(let ((e17 (! (distinct e4 e5) :named term17)))
(let ((e18 (! (>= e11 v0) :named term18)))
(let ((e19 (! (>= e4 e11) :named term19)))
(let ((e20 (! (> e11 e4) :named term20)))
(let ((e21 (! (= e5 e11) :named term21)))
(let ((e22 (! (< e12 e5) :named term22)))
(let ((e23 (! (>= e5 e6) :named term23)))
(let ((e24 (! (< e11 e4) :named term24)))
(let ((e25 (! (> e11 e11) :named term25)))
(let ((e26 (! (< e12 e12) :named term26)))
(let ((e27 (! (distinct e4 e14) :named term27)))
(let ((e28 (! (=> e8 e10) :named term28)))
(let ((e29 (! (or e21 e19) :named term29)))
(let ((e30 (! (or e23 e24) :named term30)))
(let ((e31 (! (ite e26 e15 e22) :named term31)))
(let ((e32 (! (= e30 e28) :named term32)))
(let ((e33 (! (or e16 e29) :named term33)))
(let ((e34 (! (or e9 e9) :named term34)))
(let ((e35 (! (=> e17 e25) :named term35)))
(let ((e36 (! (and e18 e34) :named term36)))
(let ((e37 (! (not e20) :named term37)))
(let ((e38 (! (=> e33 e33) :named term38)))
(let ((e39 (! (not e36) :named term39)))
(let ((e40 (! (and e27 e7) :named term40)))
(let ((e41 (! (= e37 e32) :named term41)))
(let ((e42 (! (ite e40 e39 e41) :named term42)))
(let ((e43 (! (or e31 e38) :named term43)))
(let ((e44 (! (ite e42 e43 e42) :named term44)))
(let ((e45 (! (not e44) :named term45)))
(let ((e46 (! (not e45) :named term46)))
(let ((e47 (! (and e46 e35) :named term47)))
e47
))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "NUL")
(get-model)
(get-value (term2))
(get-value (term3))
(get-value (term4))
(get-value (term5))
(get-value (term6))
(get-value (term7))
(get-value (term8))
(get-value (term9))
(get-value (term10))
(get-value (term11))
(get-value (term12))
(get-value (term13))
(get-value (term14))
(get-value (term15))
(get-value (term16))
(get-value (term17))
(get-value (term18))
(get-value (term19))
(get-value (term20))
(get-value (term21))
(get-value (term22))
(get-value (term23))
(get-value (term24))
(get-value (term25))
(get-value (term26))
(get-value (term27))
(get-value (term28))
(get-value (term29))
(get-value (term30))
(get-value (term31))
(get-value (term32))
(get-value (term33))
(get-value (term34))
(get-value (term35))
(get-value (term36))
(get-value (term37))
(get-value (term38))
(get-value (term39))
(get-value (term40))
(get-value (term41))
(get-value (term42))
(get-value (term43))
(get-value (term44))
(get-value (term45))
(get-value (term46))
(get-value (term47))
(get-info :all-statistics)
