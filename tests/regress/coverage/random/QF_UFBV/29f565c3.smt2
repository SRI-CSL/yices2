(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_UFBV)
(declare-fun f0 ( (_ BitVec 5) (_ BitVec 3) (_ BitVec 1)) (_ BitVec 12))
(declare-fun f1 ( (_ BitVec 15)) (_ BitVec 10))
(declare-fun p0 ( (_ BitVec 9)) Bool)
(declare-fun v0 () (_ BitVec 9))
(declare-fun v1 () (_ BitVec 1))
(assert (let ((e2(_ bv3 3)))
(let ((e3(_ bv11 4)))
(let ((e4 (! (bvnot v0) :named term4)))
(let ((e5 (! (f0 ((_ zero_extend 2) e2) ((_ extract 2 0) e4) ((_ extract 8 8) e4)) :named term5)))
(let ((e6 (! (f1 ((_ zero_extend 3) e5)) :named term6)))
(let ((e7 (! (concat e3 e5) :named term7)))
(let ((e8 (! (ite (bvsgt ((_ zero_extend 8) e3) e5) (_ bv1 1) (_ bv0 1)) :named term8)))
(let ((e9 (! (ite (p0 e4) (_ bv1 1) (_ bv0 1)) :named term9)))
(let ((e10 (! (ite (bvuge ((_ zero_extend 7) v0) e7) (_ bv1 1) (_ bv0 1)) :named term10)))
(let ((e11 (! (ite (distinct e7 ((_ zero_extend 7) e4)) (_ bv1 1) (_ bv0 1)) :named term11)))
(let ((e12 (! (ite (bvsge v0 ((_ sign_extend 8) e10)) (_ bv1 1) (_ bv0 1)) :named term12)))
(let ((e13 (! (bvnor e7 ((_ sign_extend 6) e6)) :named term13)))
(let ((e14 (! (bvand ((_ sign_extend 8) e12) v0) :named term14)))
(let ((e15 (! (ite (bvsgt ((_ sign_extend 8) e10) v0) (_ bv1 1) (_ bv0 1)) :named term15)))
(let ((e16 (! (bvnand e6 ((_ sign_extend 1) e14)) :named term16)))
(let ((e17 (! (ite (bvuge ((_ zero_extend 9) e15) e16) (_ bv1 1) (_ bv0 1)) :named term17)))
(let ((e18 (! (ite (bvslt e2 ((_ zero_extend 2) e9)) (_ bv1 1) (_ bv0 1)) :named term18)))
(let ((e19 (! (ite (= (_ bv1 1) ((_ extract 0 0) e17)) ((_ zero_extend 4) e5) e7) :named term19)))
(let ((e20 (! (bvlshr e10 e17) :named term20)))
(let ((e21 (! (bvshl ((_ sign_extend 5) e3) e4) :named term21)))
(let ((e22 (! (ite (bvule e6 ((_ zero_extend 9) e8)) (_ bv1 1) (_ bv0 1)) :named term22)))
(let ((e23 (! ((_ rotate_left 12) e19) :named term23)))
(let ((e24 (! (ite (= e7 ((_ sign_extend 7) e4)) (_ bv1 1) (_ bv0 1)) :named term24)))
(let ((e25 (! (ite (bvule e9 v1) (_ bv1 1) (_ bv0 1)) :named term25)))
(let ((e26 (! (p0 ((_ extract 12 4) e13)) :named term26)))
(let ((e27 (! (bvsgt e18 e22) :named term27)))
(let ((e28 (! (bvsle e8 e12) :named term28)))
(let ((e29 (! (bvsle e21 ((_ zero_extend 8) e11)) :named term29)))
(let ((e30 (! (p0 ((_ zero_extend 5) e3)) :named term30)))
(let ((e31 (! (= e23 ((_ zero_extend 7) e21)) :named term31)))
(let ((e32 (! (bvslt e20 e10) :named term32)))
(let ((e33 (! (p0 ((_ zero_extend 8) e22)) :named term33)))
(let ((e34 (! (bvuge ((_ zero_extend 8) e8) e4) :named term34)))
(let ((e35 (! (bvslt ((_ sign_extend 15) e15) e23) :named term35)))
(let ((e36 (! (bvult e7 ((_ sign_extend 15) e25)) :named term36)))
(let ((e37 (! (bvsle v0 ((_ zero_extend 8) e9)) :named term37)))
(let ((e38 (! (bvsgt e4 ((_ sign_extend 8) e25)) :named term38)))
(let ((e39 (! (bvule e10 e22) :named term39)))
(let ((e40 (! (bvsle v0 e4) :named term40)))
(let ((e41 (! (= ((_ zero_extend 15) e9) e7) :named term41)))
(let ((e42 (! (bvult e25 e8) :named term42)))
(let ((e43 (! (bvsgt e13 ((_ zero_extend 7) v0)) :named term43)))
(let ((e44 (! (bvsgt v1 e18) :named term44)))
(let ((e45 (! (bvslt e13 ((_ sign_extend 15) v1)) :named term45)))
(let ((e46 (! (bvsle ((_ sign_extend 9) e20) e16) :named term46)))
(let ((e47 (! (= e19 ((_ sign_extend 15) e12)) :named term47)))
(let ((e48 (! (bvsgt e3 ((_ sign_extend 3) e22)) :named term48)))
(let ((e49 (! (bvule ((_ zero_extend 15) e20) e19) :named term49)))
(let ((e50 (! (p0 e4) :named term50)))
(let ((e51 (! (bvsgt ((_ sign_extend 12) e3) e19) :named term51)))
(let ((e52 (! (bvsle ((_ zero_extend 5) e3) e21) :named term52)))
(let ((e53 (! (= e15 e9) :named term53)))
(let ((e54 (! (bvsgt e7 ((_ sign_extend 7) e21)) :named term54)))
(let ((e55 (! (bvslt ((_ sign_extend 15) e22) e7) :named term55)))
(let ((e56 (! (bvult v0 ((_ zero_extend 8) v1)) :named term56)))
(let ((e57 (! (p0 ((_ zero_extend 8) e17)) :named term57)))
(let ((e58 (! (bvsle ((_ zero_extend 5) e3) v0) :named term58)))
(let ((e59 (! (bvule ((_ sign_extend 15) e10) e23) :named term59)))
(let ((e60 (! (bvsge ((_ zero_extend 12) e3) e23) :named term60)))
(let ((e61 (! (distinct e13 ((_ sign_extend 15) e8)) :named term61)))
(let ((e62 (! (p0 ((_ extract 11 3) e5)) :named term62)))
(let ((e63 (! (= e2 ((_ sign_extend 2) e24)) :named term63)))
(let ((e64 (! (bvugt e8 e25) :named term64)))
(let ((e65 (! (bvuge e7 ((_ sign_extend 6) e6)) :named term65)))
(let ((e66 (! (p0 ((_ zero_extend 8) e8)) :named term66)))
(let ((e67 (! (bvugt e18 v1) :named term67)))
(let ((e68 (! (bvsle e24 e24) :named term68)))
(let ((e69 (! (bvsle e3 ((_ zero_extend 3) e17)) :named term69)))
(let ((e70 (! (bvuge e21 ((_ sign_extend 8) e24)) :named term70)))
(let ((e71 (! (p0 e21) :named term71)))
(let ((e72 (! (bvugt ((_ zero_extend 9) v1) e16) :named term72)))
(let ((e73 (! (bvult e6 ((_ sign_extend 1) e21)) :named term73)))
(let ((e74 (! (= e6 ((_ sign_extend 9) e11)) :named term74)))
(let ((e75 (! (bvult e10 e12) :named term75)))
(let ((e76 (! (bvuge e7 ((_ zero_extend 13) e2)) :named term76)))
(let ((e77 (! (bvule e10 e20) :named term77)))
(let ((e78 (! (bvult ((_ zero_extend 15) e25) e7) :named term78)))
(let ((e79 (! (bvuge e13 ((_ zero_extend 15) e24)) :named term79)))
(let ((e80 (! (bvult e9 e25) :named term80)))
(let ((e81 (! (bvugt v0 ((_ sign_extend 8) e17)) :named term81)))
(let ((e82 (! (distinct ((_ sign_extend 13) e2) e23) :named term82)))
(let ((e83 (! (p0 ((_ zero_extend 8) e17)) :named term83)))
(let ((e84 (! (p0 ((_ sign_extend 8) v1)) :named term84)))
(let ((e85 (! (bvsge ((_ sign_extend 3) e14) e5) :named term85)))
(let ((e86 (! (not e29) :named term86)))
(let ((e87 (! (and e79 e58) :named term87)))
(let ((e88 (! (= e38 e44) :named term88)))
(let ((e89 (! (not e52) :named term89)))
(let ((e90 (! (xor e57 e49) :named term90)))
(let ((e91 (! (=> e31 e67) :named term91)))
(let ((e92 (! (and e39 e72) :named term92)))
(let ((e93 (! (= e63 e43) :named term93)))
(let ((e94 (! (= e41 e65) :named term94)))
(let ((e95 (! (xor e87 e68) :named term95)))
(let ((e96 (! (or e69 e86) :named term96)))
(let ((e97 (! (or e30 e93) :named term97)))
(let ((e98 (! (xor e60 e89) :named term98)))
(let ((e99 (! (and e27 e56) :named term99)))
(let ((e100 (! (=> e84 e75) :named term100)))
(let ((e101 (! (and e42 e53) :named term101)))
(let ((e102 (! (=> e36 e66) :named term102)))
(let ((e103 (! (not e102) :named term103)))
(let ((e104 (! (or e91 e80) :named term104)))
(let ((e105 (! (and e96 e85) :named term105)))
(let ((e106 (! (not e32) :named term106)))
(let ((e107 (! (= e100 e34) :named term107)))
(let ((e108 (! (= e45 e98) :named term108)))
(let ((e109 (! (and e105 e106) :named term109)))
(let ((e110 (! (xor e82 e108) :named term110)))
(let ((e111 (! (ite e104 e101 e33) :named term111)))
(let ((e112 (! (xor e26 e26) :named term112)))
(let ((e113 (! (or e40 e47) :named term113)))
(let ((e114 (! (xor e50 e28) :named term114)))
(let ((e115 (! (xor e97 e97) :named term115)))
(let ((e116 (! (xor e92 e113) :named term116)))
(let ((e117 (! (xor e73 e55) :named term117)))
(let ((e118 (! (=> e81 e109) :named term118)))
(let ((e119 (! (or e37 e70) :named term119)))
(let ((e120 (! (ite e94 e62 e95) :named term120)))
(let ((e121 (! (not e64) :named term121)))
(let ((e122 (! (and e54 e112) :named term122)))
(let ((e123 (! (xor e111 e71) :named term123)))
(let ((e124 (! (or e117 e59) :named term124)))
(let ((e125 (! (ite e103 e118 e35) :named term125)))
(let ((e126 (! (xor e51 e88) :named term126)))
(let ((e127 (! (not e114) :named term127)))
(let ((e128 (! (= e77 e125) :named term128)))
(let ((e129 (! (ite e76 e119 e78) :named term129)))
(let ((e130 (! (or e74 e61) :named term130)))
(let ((e131 (! (and e122 e129) :named term131)))
(let ((e132 (! (and e121 e120) :named term132)))
(let ((e133 (! (or e131 e115) :named term133)))
(let ((e134 (! (=> e46 e46) :named term134)))
(let ((e135 (! (ite e133 e90 e130) :named term135)))
(let ((e136 (! (ite e126 e123 e83) :named term136)))
(let ((e137 (! (=> e48 e128) :named term137)))
(let ((e138 (! (not e116) :named term138)))
(let ((e139 (! (xor e134 e137) :named term139)))
(let ((e140 (! (=> e138 e135) :named term140)))
(let ((e141 (! (ite e107 e139 e139) :named term141)))
(let ((e142 (! (and e99 e132) :named term142)))
(let ((e143 (! (and e110 e141) :named term143)))
(let ((e144 (! (and e143 e140) :named term144)))
(let ((e145 (! (or e144 e144) :named term145)))
(let ((e146 (! (not e124) :named term146)))
(let ((e147 (! (and e145 e142) :named term147)))
(let ((e148 (! (not e147) :named term148)))
(let ((e149 (! (or e127 e127) :named term149)))
(let ((e150 (! (ite e149 e136 e146) :named term150)))
(let ((e151 (! (not e148) :named term151)))
(let ((e152 (! (=> e151 e151) :named term152)))
(let ((e153 (! (and e152 e152) :named term153)))
(let ((e154 (! (xor e153 e150) :named term154)))
e154
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "NUL")
(get-model)
(get-value (term4))
(get-value (term5))
(get-value (term6))
(get-value (term7))
(get-value (term8))
(get-value (term9))
(get-value (term10))
(get-value (term11))
(get-value (term12))
(get-value (term13))
(get-value (term14))
(get-value (term15))
(get-value (term16))
(get-value (term17))
(get-value (term18))
(get-value (term19))
(get-value (term20))
(get-value (term21))
(get-value (term22))
(get-value (term23))
(get-value (term24))
(get-value (term25))
(get-value (term26))
(get-value (term27))
(get-value (term28))
(get-value (term29))
(get-value (term30))
(get-value (term31))
(get-value (term32))
(get-value (term33))
(get-value (term34))
(get-value (term35))
(get-value (term36))
(get-value (term37))
(get-value (term38))
(get-value (term39))
(get-value (term40))
(get-value (term41))
(get-value (term42))
(get-value (term43))
(get-value (term44))
(get-value (term45))
(get-value (term46))
(get-value (term47))
(get-value (term48))
(get-value (term49))
(get-value (term50))
(get-value (term51))
(get-value (term52))
(get-value (term53))
(get-value (term54))
(get-value (term55))
(get-value (term56))
(get-value (term57))
(get-value (term58))
(get-value (term59))
(get-value (term60))
(get-value (term61))
(get-value (term62))
(get-value (term63))
(get-value (term64))
(get-value (term65))
(get-value (term66))
(get-value (term67))
(get-value (term68))
(get-value (term69))
(get-value (term70))
(get-value (term71))
(get-value (term72))
(get-value (term73))
(get-value (term74))
(get-value (term75))
(get-value (term76))
(get-value (term77))
(get-value (term78))
(get-value (term79))
(get-value (term80))
(get-value (term81))
(get-value (term82))
(get-value (term83))
(get-value (term84))
(get-value (term85))
(get-value (term86))
(get-value (term87))
(get-value (term88))
(get-value (term89))
(get-value (term90))
(get-value (term91))
(get-value (term92))
(get-value (term93))
(get-value (term94))
(get-value (term95))
(get-value (term96))
(get-value (term97))
(get-value (term98))
(get-value (term99))
(get-value (term100))
(get-value (term101))
(get-value (term102))
(get-value (term103))
(get-value (term104))
(get-value (term105))
(get-value (term106))
(get-value (term107))
(get-value (term108))
(get-value (term109))
(get-value (term110))
(get-value (term111))
(get-value (term112))
(get-value (term113))
(get-value (term114))
(get-value (term115))
(get-value (term116))
(get-value (term117))
(get-value (term118))
(get-value (term119))
(get-value (term120))
(get-value (term121))
(get-value (term122))
(get-value (term123))
(get-value (term124))
(get-value (term125))
(get-value (term126))
(get-value (term127))
(get-value (term128))
(get-value (term129))
(get-value (term130))
(get-value (term131))
(get-value (term132))
(get-value (term133))
(get-value (term134))
(get-value (term135))
(get-value (term136))
(get-value (term137))
(get-value (term138))
(get-value (term139))
(get-value (term140))
(get-value (term141))
(get-value (term142))
(get-value (term143))
(get-value (term144))
(get-value (term145))
(get-value (term146))
(get-value (term147))
(get-value (term148))
(get-value (term149))
(get-value (term150))
(get-value (term151))
(get-value (term152))
(get-value (term153))
(get-value (term154))
(get-info :all-statistics)
