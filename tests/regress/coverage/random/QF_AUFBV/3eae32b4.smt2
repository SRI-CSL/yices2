(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_AUFBV)
(declare-fun v0 () (_ BitVec 5))
(declare-fun v1 () (_ BitVec 5))
(declare-fun a2 () (Array  (_ BitVec 6)  (_ BitVec 6)))
(declare-fun a3 () (Array  (_ BitVec 14)  (_ BitVec 2)))
(assert (let ((e4(_ bv15 4)))
(let ((e5 (! (bvurem e4 e4) :named term5)))
(let ((e6 (! (ite (bvslt v1 v0) (_ bv1 1) (_ bv0 1)) :named term6)))
(let ((e7 (! (store a2 ((_ zero_extend 1) v1) ((_ sign_extend 1) v0)) :named term7)))
(let ((e8 (! (store a2 ((_ zero_extend 1) v0) ((_ sign_extend 1) v0)) :named term8)))
(let ((e9 (! (select e7 ((_ zero_extend 1) v1)) :named term9)))
(let ((e10 (! (select a2 ((_ sign_extend 2) e4)) :named term10)))
(let ((e11 (! (select e8 ((_ sign_extend 5) e6)) :named term11)))
(let ((e12 (! (store e8 ((_ sign_extend 2) e4) e11) :named term12)))
(let ((e13 (! (select a3 ((_ zero_extend 8) e9)) :named term13)))
(let ((e14 (! (store a2 ((_ sign_extend 2) e5) e9) :named term14)))
(let ((e15 (! (select e8 e11) :named term15)))
(let ((e16 (! (ite (bvult e11 ((_ sign_extend 2) e4)) (_ bv1 1) (_ bv0 1)) :named term16)))
(let ((e17 (! (bvmul e9 ((_ sign_extend 2) e4)) :named term17)))
(let ((e18 (! (ite (= ((_ sign_extend 1) v0) e10) (_ bv1 1) (_ bv0 1)) :named term18)))
(let ((e19 (! (ite (bvuge v1 ((_ zero_extend 4) e18)) (_ bv1 1) (_ bv0 1)) :named term19)))
(let ((e20 (! (ite (bvult ((_ sign_extend 2) e5) e15) (_ bv1 1) (_ bv0 1)) :named term20)))
(let ((e21 (! (bvxnor ((_ zero_extend 4) e13) e17) :named term21)))
(let ((e22 (! (ite (bvuge e6 e18) (_ bv1 1) (_ bv0 1)) :named term22)))
(let ((e23 (! (bvugt e21 e10) :named term23)))
(let ((e24 (! (bvsle ((_ zero_extend 3) e22) e4) :named term24)))
(let ((e25 (! (bvsgt ((_ sign_extend 5) e16) e10) :named term25)))
(let ((e26 (! (bvsge e11 ((_ sign_extend 1) v1)) :named term26)))
(let ((e27 (! (bvslt e11 ((_ zero_extend 5) e20)) :named term27)))
(let ((e28 (! (bvsgt e10 ((_ zero_extend 4) e13)) :named term28)))
(let ((e29 (! (bvslt e10 ((_ sign_extend 2) e5)) :named term29)))
(let ((e30 (! (bvsgt e16 e22) :named term30)))
(let ((e31 (! (bvugt ((_ sign_extend 4) e22) v1) :named term31)))
(let ((e32 (! (bvsgt ((_ zero_extend 5) e20) e10) :named term32)))
(let ((e33 (! (bvsgt ((_ sign_extend 4) e13) e9) :named term33)))
(let ((e34 (! (bvsge ((_ zero_extend 4) e13) e11) :named term34)))
(let ((e35 (! (bvuge e9 e15) :named term35)))
(let ((e36 (! (bvuge e17 ((_ sign_extend 5) e16)) :named term36)))
(let ((e37 (! (bvugt e5 ((_ sign_extend 3) e16)) :named term37)))
(let ((e38 (! (bvule e4 ((_ zero_extend 2) e13)) :named term38)))
(let ((e39 (! (= ((_ zero_extend 4) e20) v0) :named term39)))
(let ((e40 (! (bvslt ((_ sign_extend 1) e19) e13) :named term40)))
(let ((e41 (! (bvule ((_ zero_extend 4) e13) e11) :named term41)))
(let ((e42 (! (distinct ((_ zero_extend 1) v0) e9) :named term42)))
(let ((e43 (! (bvsle e13 ((_ zero_extend 1) e16)) :named term43)))
(let ((e44 (! (bvsgt e16 e6) :named term44)))
(let ((e45 (! (bvsge ((_ sign_extend 5) e20) e10) :named term45)))
(let ((e46 (! (bvsgt e17 ((_ zero_extend 5) e16)) :named term46)))
(let ((e47 (! (bvule e17 ((_ zero_extend 5) e20)) :named term47)))
(let ((e48 (! (bvslt e18 e18) :named term48)))
(let ((e49 (! (= e31 e23) :named term49)))
(let ((e50 (! (=> e45 e26) :named term50)))
(let ((e51 (! (or e48 e41) :named term51)))
(let ((e52 (! (not e49) :named term52)))
(let ((e53 (! (xor e39 e30) :named term53)))
(let ((e54 (! (ite e35 e34 e25) :named term54)))
(let ((e55 (! (xor e51 e53) :named term55)))
(let ((e56 (! (and e36 e40) :named term56)))
(let ((e57 (! (or e38 e52) :named term57)))
(let ((e58 (! (=> e46 e43) :named term58)))
(let ((e59 (! (not e27) :named term59)))
(let ((e60 (! (not e55) :named term60)))
(let ((e61 (! (=> e58 e60) :named term61)))
(let ((e62 (! (or e59 e54) :named term62)))
(let ((e63 (! (not e29) :named term63)))
(let ((e64 (! (or e62 e50) :named term64)))
(let ((e65 (! (not e57) :named term65)))
(let ((e66 (! (or e24 e61) :named term66)))
(let ((e67 (! (= e63 e28) :named term67)))
(let ((e68 (! (=> e32 e56) :named term68)))
(let ((e69 (! (=> e64 e42) :named term69)))
(let ((e70 (! (= e65 e65) :named term70)))
(let ((e71 (! (ite e66 e47 e69) :named term71)))
(let ((e72 (! (=> e70 e67) :named term72)))
(let ((e73 (! (ite e72 e33 e37) :named term73)))
(let ((e74 (! (and e68 e68) :named term74)))
(let ((e75 (! (=> e71 e73) :named term75)))
(let ((e76 (! (or e44 e44) :named term76)))
(let ((e77 (! (not e74) :named term77)))
(let ((e78 (! (not e77) :named term78)))
(let ((e79 (! (=> e76 e76) :named term79)))
(let ((e80 (! (xor e75 e75) :named term80)))
(let ((e81 (! (=> e79 e78) :named term81)))
(let ((e82 (! (or e81 e80) :named term82)))
(let ((e83 (! (and e82 (not (= e4 (_ bv0 4)))) :named term83)))
e83
)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "NUL")
(get-model)
(get-value (term5))
(get-value (term6))
(get-value (term7))
(get-value (term8))
(get-value (term9))
(get-value (term10))
(get-value (term11))
(get-value (term12))
(get-value (term13))
(get-value (term14))
(get-value (term15))
(get-value (term16))
(get-value (term17))
(get-value (term18))
(get-value (term19))
(get-value (term20))
(get-value (term21))
(get-value (term22))
(get-value (term23))
(get-value (term24))
(get-value (term25))
(get-value (term26))
(get-value (term27))
(get-value (term28))
(get-value (term29))
(get-value (term30))
(get-value (term31))
(get-value (term32))
(get-value (term33))
(get-value (term34))
(get-value (term35))
(get-value (term36))
(get-value (term37))
(get-value (term38))
(get-value (term39))
(get-value (term40))
(get-value (term41))
(get-value (term42))
(get-value (term43))
(get-value (term44))
(get-value (term45))
(get-value (term46))
(get-value (term47))
(get-value (term48))
(get-value (term49))
(get-value (term50))
(get-value (term51))
(get-value (term52))
(get-value (term53))
(get-value (term54))
(get-value (term55))
(get-value (term56))
(get-value (term57))
(get-value (term58))
(get-value (term59))
(get-value (term60))
(get-value (term61))
(get-value (term62))
(get-value (term63))
(get-value (term64))
(get-value (term65))
(get-value (term66))
(get-value (term67))
(get-value (term68))
(get-value (term69))
(get-value (term70))
(get-value (term71))
(get-value (term72))
(get-value (term73))
(get-value (term74))
(get-value (term75))
(get-value (term76))
(get-value (term77))
(get-value (term78))
(get-value (term79))
(get-value (term80))
(get-value (term81))
(get-value (term82))
(get-value (term83))
(get-info :all-statistics)
