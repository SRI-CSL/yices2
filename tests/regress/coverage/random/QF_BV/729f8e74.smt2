(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 15))
(declare-fun v1 () (_ BitVec 8))
(declare-fun v2 () (_ BitVec 13))
(declare-fun v3 () (_ BitVec 8))
(assert (let ((e4(_ bv1131 12)))
(let ((e5 (! (ite (bvsle ((_ sign_extend 3) e4) v0) (_ bv1 1) (_ bv0 1)) :named term5)))
(let ((e6 (! (ite (bvslt ((_ zero_extend 1) e4) v2) (_ bv1 1) (_ bv0 1)) :named term6)))
(let ((e7 (! (ite (bvsge ((_ zero_extend 5) v1) v2) (_ bv1 1) (_ bv0 1)) :named term7)))
(let ((e8 (! (bvand v3 v3) :named term8)))
(let ((e9 (! (bvsge ((_ sign_extend 4) v3) e4) :named term9)))
(let ((e10 (! (bvuge v0 ((_ zero_extend 2) v2)) :named term10)))
(let ((e11 (! (distinct v1 v1) :named term11)))
(let ((e12 (! (bvuge e7 e6) :named term12)))
(let ((e13 (! (bvsle ((_ sign_extend 1) e4) v2) :named term13)))
(let ((e14 (! (bvslt ((_ zero_extend 7) e5) v3) :named term14)))
(let ((e15 (! (distinct e6 e5) :named term15)))
(let ((e16 (! (bvsle v0 ((_ sign_extend 7) e8)) :named term16)))
(let ((e17 (! (and e11 e14) :named term17)))
(let ((e18 (! (or e16 e12) :named term18)))
(let ((e19 (! (and e18 e9) :named term19)))
(let ((e20 (! (xor e13 e17) :named term20)))
(let ((e21 (! (xor e10 e10) :named term21)))
(let ((e22 (! (or e15 e19) :named term22)))
(let ((e23 (! (ite e22 e20 e21) :named term23)))
e23
)))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "NUL")
(get-model)
(get-value (term5))
(get-value (term6))
(get-value (term7))
(get-value (term8))
(get-value (term9))
(get-value (term10))
(get-value (term11))
(get-value (term12))
(get-value (term13))
(get-value (term14))
(get-value (term15))
(get-value (term16))
(get-value (term17))
(get-value (term18))
(get-value (term19))
(get-value (term20))
(get-value (term21))
(get-value (term22))
(get-value (term23))
(get-info :all-statistics)
