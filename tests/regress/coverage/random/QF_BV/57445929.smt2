(set-info :source |fuzzsmt|)
(set-info :smt-lib-version 2.0)
(set-info :category "random")
(set-info :status unknown)
(set-logic QF_BV)
(declare-fun v0 () (_ BitVec 6))
(declare-fun v1 () (_ BitVec 10))
(assert (let ((e2(_ bv79 7)))
(let ((e3(_ bv7377 16)))
(let ((e4 (! (bvadd ((_ zero_extend 10) v0) e3) :named term4)))
(let ((e5 (! (ite (bvugt ((_ sign_extend 10) v0) e3) (_ bv1 1) (_ bv0 1)) :named term5)))
(let ((e6 (! (bvxor e2 ((_ sign_extend 6) e5)) :named term6)))
(let ((e7 (! (bvmul v1 ((_ sign_extend 3) e2)) :named term7)))
(let ((e8 (! (bvsle e6 ((_ sign_extend 6) e5)) :named term8)))
(let ((e9 (! (bvugt e2 e2) :named term9)))
(let ((e10 (! (bvule v1 v1) :named term10)))
(let ((e11 (! (bvult e2 ((_ sign_extend 1) v0)) :named term11)))
(let ((e12 (! (= e7 v1) :named term12)))
(let ((e13 (! (bvult e6 ((_ sign_extend 1) v0)) :named term13)))
(let ((e14 (! (bvsgt e7 ((_ sign_extend 4) v0)) :named term14)))
(let ((e15 (! (bvule e7 v1) :named term15)))
(let ((e16 (! (bvslt v1 ((_ sign_extend 3) e2)) :named term16)))
(let ((e17 (! (= e4 ((_ zero_extend 6) e7)) :named term17)))
(let ((e18 (! (bvule ((_ sign_extend 6) v1) e4) :named term18)))
(let ((e19 (! (bvsle v1 e7) :named term19)))
(let ((e20 (! (bvsle ((_ zero_extend 9) e2) e4) :named term20)))
(let ((e21 (! (bvsle ((_ zero_extend 1) v0) e6) :named term21)))
(let ((e22 (! (bvult ((_ zero_extend 9) e5) e7) :named term22)))
(let ((e23 (! (bvule ((_ sign_extend 3) e6) v1) :named term23)))
(let ((e24 (! (bvuge ((_ zero_extend 6) e7) e3) :named term24)))
(let ((e25 (! (= e11 e11) :named term25)))
(let ((e26 (! (ite e19 e23 e8) :named term26)))
(let ((e27 (! (ite e16 e15 e24) :named term27)))
(let ((e28 (! (ite e27 e20 e21) :named term28)))
(let ((e29 (! (not e22) :named term29)))
(let ((e30 (! (or e29 e9) :named term30)))
(let ((e31 (! (not e12) :named term31)))
(let ((e32 (! (ite e18 e13 e30) :named term32)))
(let ((e33 (! (not e14) :named term33)))
(let ((e34 (! (ite e25 e25 e28) :named term34)))
(let ((e35 (! (xor e34 e17) :named term35)))
(let ((e36 (! (or e31 e26) :named term36)))
(let ((e37 (! (and e36 e33) :named term37)))
(let ((e38 (! (= e35 e10) :named term38)))
(let ((e39 (! (ite e38 e32 e37) :named term39)))
e39
)))))))))))))))))))))))))))))))))))))))

(check-sat)
(set-option :regular-output-channel "NUL")
(get-model)
(get-value (term4))
(get-value (term5))
(get-value (term6))
(get-value (term7))
(get-value (term8))
(get-value (term9))
(get-value (term10))
(get-value (term11))
(get-value (term12))
(get-value (term13))
(get-value (term14))
(get-value (term15))
(get-value (term16))
(get-value (term17))
(get-value (term18))
(get-value (term19))
(get-value (term20))
(get-value (term21))
(get-value (term22))
(get-value (term23))
(get-value (term24))
(get-value (term25))
(get-value (term26))
(get-value (term27))
(get-value (term28))
(get-value (term29))
(get-value (term30))
(get-value (term31))
(get-value (term32))
(get-value (term33))
(get-value (term34))
(get-value (term35))
(get-value (term36))
(get-value (term37))
(get-value (term38))
(get-value (term39))
(get-info :all-statistics)
