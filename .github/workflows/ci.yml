name: CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-push:
    if: github.event_name == 'push'
    strategy:
      matrix:
        os: [ubuntu-latest]
        mode: [debug, release]
        config-opt: [--enable-mcsat]
        env: [CC=gcc CXX=g++]
    name: ${{ matrix.os }}|${{ matrix.mode }}|${{ matrix.config-opt }}|${{ matrix.env }} (push)
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
      - name: Build
        uses: ./.github/actions/build
        with:
          mode: ${{ matrix.mode }}
          config-opt: ${{ matrix.config-opt }}
          env: ${{ matrix.env }}
      - name: Test
        uses: ./.github/actions/test
        with:
          mode: ${{ matrix.mode }}

  build-pr:
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        mode: [debug, release, gcov]
        config-opt: [--enable-mcsat, --enable-thread-safety]
        env: [CC=gcc CXX=g++, CC=clang CXX=clang++]
        include:
          - os: ubuntu-latest
            mode: gcov
            config-opt: --enable-mcsat
            env: CC=gcc CXX=g++
          - os: ubuntu-latest
            mode: debug
            config-opt: --enable-thread-safety --enable-mcsat
            env: CC=gcc CXX=g++
    name: ${{ matrix.os }}|${{ matrix.mode }}|${{ matrix.config-opt }}|${{ matrix.env }} (pr)
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies
      - name: Build
        uses: ./.github/actions/build
        with:
          mode: ${{ matrix.mode }}
          config-opt: ${{ matrix.config-opt }}
          env: ${{ matrix.env }}
      - name: Test
        uses: ./.github/actions/test
        with:
          mode: ${{ matrix.mode }}
      - name: Coverage
        if: matrix.mode == 'gcov'
        uses: ./.github/actions/coverage
      - name: Coveralls
        if: matrix.mode == 'gcov'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: 'coverage.info'
