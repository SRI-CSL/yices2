name: Build

inputs:
  mode:
    required: true
  config-opt:
    required: false
    default: ""
  env:
    required: false
    default: ""

runs:
  using: composite
  steps:
    - name: Cache libpoly
      id: cache-libpoly
      if: contains(inputs.config-opt, '--enable-mcsat')
      uses: actions/cache@v3
      with:
        path: libpoly
        key: ${{ runner.os }}-${{ matrix.os }}-libpoly-${{ hashFiles('**/configure.ac', '**/configure') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.os }}-libpoly-

    - name: Build and install libpoly
      if: contains(inputs.config-opt, '--enable-mcsat') && steps.cache-libpoly.outputs.cache-hit != 'true'
      shell: bash
      run: |
        pushd .
        git clone https://github.com/SRI-CSL/libpoly.git
        mkdir -p libpoly/build
        cd libpoly/build
        ${{ inputs.env }} cmake ..
        make
        sudo make install
        popd

    - name: Cache CUDD
      id: cache-cudd
      if: contains(inputs.config-opt, '--enable-mcsat')
      uses: actions/cache@v3
      with:
        path: cudd
        key: ${{ runner.os }}-${{ matrix.os }}-cudd-3.0.0-${{ hashFiles('**/configure.ac', '**/configure') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.os }}-cudd-3.0.0-

    - name: Build and install CUDD
      if: contains(inputs.config-opt, '--enable-mcsat') && steps.cache-cudd.outputs.cache-hit != 'true'
      shell: bash
      run: |
        pushd .
        git clone https://github.com/ivmai/cudd.git
        cd cudd
        git checkout tags/cudd-3.0.0
        autoreconf -fi
        ${{ inputs.env }} ./configure --enable-shared
        make
        sudo make install
        popd

    - name: Build Yices2
      shell: bash
      run: |
        autoconf
        CFLAGS='-Werror' ${{ inputs.env }} ./configure ${{ inputs.config-opt }}
        # This is needed for yices2 to find libpoly.so.0. /usr/local/lib not searched by default?
        export LD_LIBRARY_PATH=/usr/local/lib/:${LD_LIBRARY_PATH}
        make MODE=${{ inputs.mode }}
